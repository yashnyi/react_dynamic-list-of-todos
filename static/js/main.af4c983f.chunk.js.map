{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","inputQuery","selectQuery","handleChange","event","target","name","value","setState","filterTodos","todos","filter","todo","completed","title","includes","this","props","onSelectUser","filteredTodos","className","type","onChange","length","map","key","id","classNames","checked","readOnly","onClick","userId","React","PureComponent","defaultProps","request","url","fetch","then","result","json","CurrentUser","user","loadUser","prevProps","a","data","email","phone","Component","App","selectedUserId","selectUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af4c983f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\nexport class TodoList extends React.PureComponent {\n  state = {\n    inputQuery: '',\n    selectQuery: '',\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  filterTodos = (todos) => {\n    const { inputQuery, selectQuery } = this.state;\n\n    if (selectQuery === 'completed') {\n      return todos.filter(todo => todo.completed);\n    }\n\n    if (selectQuery === 'active') {\n      return todos.filter(todo => !todo.completed);\n    }\n\n    return todos.filter(todo => todo.title.includes(inputQuery));\n  }\n\n  render() {\n    const { handleChange, filterTodos } = this;\n    const { inputQuery, selectQuery } = this.state;\n    const { todos, onSelectUser } = this.props;\n\n    const filteredTodos = filterTodos(todos);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          type=\"text\"\n          name=\"inputQuery\"\n          value={inputQuery}\n          onChange={handleChange}\n        />\n        <select\n          name=\"selectQuery\"\n          value={selectQuery}\n          onChange={handleChange}\n        >\n          <option value=\"all\">\n            All\n          </option>\n          <option value=\"active\">\n            Active\n          </option>\n          <option value=\"completed\">\n            Completed\n          </option>\n        </select>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {!filteredTodos.length && (\n              'LOADING...'\n            )}\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item',\n                  { 'TodoList__item--checked': todo.completed },\n                  { 'TodoList__item--unchecked': !todo.completed })}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>\n                    {todo.title}\n                  </p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => onSelectUser(todo.userId)}\n                >\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ),\n  onSelectUser: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}/${url}`)\n  .then(result => result.json());\n\nexport const getUser = userId => request(`users/${userId}`)\n  .then(result => result.data);\n\nexport const getTodos = () => request('todos')\n  .then(result => result.data.filter(todo => todo.title));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({\n      user,\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { userId, onSelectUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {' '}\n            {userId}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">\n          {user.name}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {user.email}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {user.phone}\n        </p>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => onSelectUser(null)}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onSelectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  render() {\n    const { selectUser } = this;\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onSelectUser={selectUser}\n          />\n        </div>\n\n\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onSelectUser={selectUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}